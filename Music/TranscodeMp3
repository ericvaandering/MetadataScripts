#! /usr/bin/perl

my $MakeOgg   = 0;
my $MakeMP3   = 1;
my $MaxFiles  = 2500;
my $RemoveOld = 1;
my $FlacDir = "/data/vondo/CDs/";
my $OggDir = "/data/vondo/Transcoded_CDs/ogg/";
my $MP3Dir = "/data/vondo/Transcoded_CDs/mp3/";

my $SoundConvert = "/data/vondo/Transcoded_CDs/soundconvert.pl";

my @FlacFiles = `find $FlacDir -name '*.flac'`;
my @OggFiles  = `find $OggDir  -name '*.ogg'`;
my @MP3Files  = `find $MP3Dir  -name '*.mp3'`;

my %FlacFiles = ();
my %OggFiles = ();
my %MP3Files = ();
my $MadeFiles = 0;

foreach my $FlacFile (@FlacFiles) {
  chomp $FlacFile;
  $FlacFile =~ s/$FlacDir//;
  $FlacFile =~ s/\.flac//;
  $FlacFiles{$FlacFile} = 1;
}
foreach my $OggFile (@OggFiles) {
  chomp $OggFile;
  $OggFile =~ s/$OggDir//;
  $OggFile =~ s/\.ogg//;
  $OggFiles{$OggFile} = 1;
}
foreach my $MP3File (@MP3Files) {
  chomp $MP3File;
  $MP3File =~ s/$MP3Dir//;
  $MP3File =~ s/\.mp3//;
  $MP3Files{$MP3File} = 1;
}

### Update Tags

#foreach my $MP3 (sort keys %MP3Files) {
#  my $MP3File  = $MP3Dir. $MP3.".mp3";
#  my $FlacFile = $FlacDir.$MP3.".flac";
#  CheckUpdateID3($MP3File,$FlacFile);
#}

#exit;

foreach my $File (sort keys %FlacFiles) {
  my $FlacFile = $FlacDir."/".$File.".flac";
  my $MP3File  = $MP3Dir."/".$File.".mp3";
  my $OggFile  = $OggDir."/".$File.".ogg";
  if ((!$MP3Files{$File} || -M $FlacFile < -M $MP3File)
      && $MakeMP3 && $MadeFiles < $MaxFiles) {
    ++$MadeFiles;
    MakeDirectoryFor($File,$MP3Dir);
    print "Making file $MadeFiles: $MP3File\n";
    system "cp",$FlacFile,"/tmp/transcodemp3.flac";
    system $SoundConvert,"-o","mp3","/tmp/transcodemp3.flac";
    CheckUpdateID3("/tmp/transcode.flac.mp3","/tmp/transcodemp3.flac");
    system "mv","/tmp/transcodemp3.flac.mp3",$MP3File;
  }
  if ((!$OggFiles{$File} || -M $FlacFile < -M $OggFile)
      && $MakeOgg && $MadeFiles < $MaxFiles) {
    ++$MadeFiles;
    MakeDirectoryFor($File,$OggDir);
    print "Making file $MadeFiles: $OggFile\n";
    system "cp",$FlacFile,"/tmp/transcodeogg.flac";
    system $SoundConvert,"-o","ogg","/tmp/transcodeogg.flac";
    system "mv","/tmp/transcodeogg.flac.ogg",$OggFile;
  }
}

if ($RemoveOld) {
  foreach my $File (sort keys %MP3Files) {
    my $MP3File  = $MP3Dir."/".$File.".mp3";
    if ((!$FlacFiles{$File} ||  -M $FlacFile > -M $File) && $MakeMP3) {
      print "Removing $MP3File\n";
      unlink $MP3File;
    }
  }
  foreach my $File (sort keys %OggFiles) {
    my $OggFile  = $OggDir."/".$File.".ogg";
    if ((!$FlacFiles{$File} || -M $FlacFile > -M $File) && $MakeOgg) {
      print "Removing $OggFile\n";
      unlink $OggFile;
    }
  }
}
exit;

sub MakeDirectoryFor($$) {
  my ($File,$BaseDir) = @_;
  my @Parts = split /\//,$File;
  pop @Parts;
  my $NewDir = $BaseDir;
  foreach my $Part (@Parts) {
    $NewDir .= "/".$Part;
    my $Status = mkdir $NewDir;
  }
  return;
}

sub CheckUpdateID3($$) {
  my ($MP3File,$FlacFile) = @_;

  @MP3Tags = `id3ed -i "$MP3File"`;
  if (1) {
#   if (grep /\(no tag\)$/,@MP3Tags) {
    print "$MP3File has no tags. Updating.\n";

    unless (-e $FlacFile) {
      print "Flac file does not exist.\n";
      next;
    }

    @FlacTags = `metaflac  --export-tags-to=- "$FlacFile"`;
    my ($Title ) = grep /^title|^TITLE/,  @FlacTags; $Title  =~ s/title=//;  $Title  =~ s/TITLE=//;
    my ($Album ) = grep /^album|^ALBUM/,  @FlacTags; $Album  =~ s/album=//;  $Album  =~ s/ALBUM=//;
    my ($Year  ) = grep /^date|^DATE/,    @FlacTags; $Year   =~ s/date=//;   $Year   =~ s/DATE=//;
    my ($Genre ) = grep /^genre|^GENRE/,  @FlacTags; $Genre  =~ s/genre=//;  $Genre  =~ s/GENRE=//;
    my ($Artist) = grep /^artist|^ARTIST/,@FlacTags; $Artist =~ s/artist=//; $Artist =~ s/ARTIST=//;
    my ($Track ) = grep /^tracknumber|^TRACKNUMBER/,@FlacTags; $Track =~ s/tracknumber=//; $Track =~ s/TRACKNUMBER=//;

    chomp $Title ; chomp $Album ; chomp $Year  ; chomp $Genre ; chomp $Artist; chomp $Track ;

#     system ("id3","-g",$Genre,$MP3File);
#     system ("id3","-t",$Title,$MP3File);
#     system ("id3","-T",$Track,$MP3File);
#     system ("id3","-a",$Artist,$MP3File);
#     system ("id3","-A",$Album,$MP3File);
#     system ("id3","-y",$Year,$MP3File);

    system ("id3","-g",$Genre, "-t",$Title, "-T",$Track, "-a",$Artist, "-A",$Album, "-y",$Year,$MP3File);
  }  else {
#    print "Tags ",@MP3Tags;
  }
}
