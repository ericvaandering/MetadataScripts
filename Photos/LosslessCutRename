#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function

import commands
import optparse
import os
import re
import sys

offset = 1  # Make new files not collide with the original, even if it's not there. Makes Lightroom happier

parser = optparse.OptionParser(usage="usage: %prog [options]")

parser.add_option(
    "-n",
    action="store_true", dest="test",
    help="Don't change any files, print what would happen")

args = sys.argv
(options, args) = parser.parse_args(args)

filenames = []

# Patterns for output of LosslessCut files and already renamed files
losslessPattern = re.compile(r'([0-9a-p]){8}\.(mp4|mov)\-[0-9\.]{12}\-[0-9\.]{12}\.(mp4|mov)')
renamedPattern = re.compile(r'([0-9a-p]){8}\.(mp4|mov)')

existingTimes = {}


def alpha_to_timestamp(alpha_ts):
    alpha_num_chars = '0123456789abcdefghijklmnop'
    hex_ts = ''
    for letter in alpha_ts:
        index_val = alpha_num_chars.index(letter) - 10
        hex_ts += alpha_num_chars[index_val]

    timestamp = int(hex_ts, 16)
    return timestamp


def timestamp_to_alpha(timestamp):
    alpha_num_chars = '0123456789abcdefghijklmnop'
    alpha_ts = ''
    hex_ts = ("%x" % timestamp).lower()

    for letter in hex_ts:
        index_val = alpha_num_chars.index(letter) + 10
        alpha_ts += alpha_num_chars[index_val]

    return alpha_ts


# Collect and categorize filenames
for fileName in os.listdir('.'):
    if losslessPattern.match(fileName):
        filenames.append(fileName)
        continue
    if renamedPattern.match(fileName):
        existingTimes[alpha_to_timestamp(fileName.split('.')[0])] = True
        continue

bumpedShots = 0
for infile in sorted(filenames):
    bumped = False
    seconds = alpha_to_timestamp(infile.split('.')[0]) + offset
    extension = infile.split('.')[-1]

    # Find the next available slot for this file
    while seconds in existingTimes:
        bumped = True
        seconds += 1
    existingTimes[seconds] = True
    if bumped:
        bumpedShots += 1

    newFilename = ("%s.%s" % (timestamp_to_alpha(seconds), extension)).lower()

    if options.test:
        pass
    else:
        cmd = 'mv -n "%s" %s' % (infile, newFilename)
        status, output = commands.getstatusoutput(cmd)
        if status:
            sys.exit()

    print('Rename %s to %s' % (infile, newFilename))
print("Number of videos:             ", len(filenames))
print("Total number of clips bumped: ", bumpedShots)
